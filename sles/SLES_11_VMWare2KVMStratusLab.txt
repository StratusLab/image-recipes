Procedure to migrate SLES 11 image (containing dependencies for SCOS-2000) 
created for VMWare to KVM with contextualization for StratusLab.

0. Trivia

sixsq-2 $ wget http://appliances.stratuslab.eu/images/base/SLES-11/1.0/SLES-11.img.gz
sixsq-2 $ gunzip -c SLES-11.img.gz > SLES-11_test.img

1. Boot into rescue mode from SLES 11 CD/DVD with the image attached as HD. 
(Using virt-rescue didn't work as vmware uninstallation couldn't re-build 
mkinitrd. TODO: try to find a way to do this.)

Using virt-manager under KVM. (on sixsq-2 @ GRNet)

The VM can be created with VM creation tool in virt-manager.

Make a separate connection to KVM-enabled node with secure X forwarding

local $ ssh root@62.217.120.134 -Y
...
remote $ virt-manager --no-fork

At VM creation time make sure that

* CDROM should be IDE
* HD should be SCSI (by default HD is virtio; after changing to SCSI libvirt 
may report problems of incompatible address for SCSI; FIX: 
'virsh edit SLES_11_test' and remove <address> element for the HD)

When booted from CD choose Rescue Mode and make sure that console=ttyS0 is 
provided to kernel to be able to connect to the console of the VM using 
'virsh', which is more comfortable rather than working via VNC.

Start VM

sixsq-2 $ virsh start SLES_11_test

2. Remove VMWare addons and make new initrd image.

sixsq-2 $ virsh console SLES_11_test
...
===  Main Menu  ===
4) Rescue System
...
===  Kernel  ===
1) * Default
...
===  Boot Options  ===
> rescue initrd=initrd splash=silent rescue=1 console=ttyS0,115200
...
Rescue login: root
Rescue:~ # ll /dev/sda
sda   sda1  sda2 
Rescue:~ # mount /dev/sda2 /mnt
# include the following mount points as well
Rescue:~ # mount -t sysfs none /mnt/sys
Rescue:~ # mount -t proc mone /mnt/proc/
Rescue:~ # chroot /mnt/
# NB! create those otherwise mkinitrd launched by vmware-uninstall-tools.pl will fail.
Rescue:/> mkdir /dev/shm 
Rescue:/> mknod -m 0660 /dev/sda2 b 8 2
Rescue:/> vmware-uninstall-tools.pl 
Uninstalling the tar installation of VMware Tools.
...
File /etc/sysconfig/mouse is backed up to /etc/sysconfig/mouse.old.4.

File /etc/X11/xorg.conf is backed up to /etc/X11/xorg.conf.old.0.

File /etc/modprobe.conf.local is backed up to /etc/modprobe.conf.local.old.4.

Restoring the kernel initrd image.:

Kernel image:   /boot/vmlinuz-2.6.27.19-5-default
Initrd image:   /boot/initrd-2.6.27.19-5-default
...
Kernel Modules:	scsi_mod mptbase mptscsih hwmon thermal_sys processor thermal scsi_transport_spi mptspi BusLogic mii pcnet32 dock libata ata_piix ata_generic ide-core piix ide-pci-generic fan jbd mbcache ext3 edd sym53c8xx crc-t10dif sd_mod usbcore ohci-hcd uhci-hcd ehci-hcd ff-memless hid usbhid 
Features:       block usb resume.userspace resume.kernel
27620 blocks
...
Rescue:/> 

3. Additional configuration (root password, fstab, runlevel, persistent network).

# Set a password just in case
Rescue:/> mknod -m 644 /dev/urandom c 1 9
Rescue:/> passwd

## NB! The image provided by TERMA couldn't boot if console device is not provided
#      in libvirt deployment script. Be careful, otherwise the image may not boot.
# Edit /boot/grub/menu.lst and add console=ttyS0 to be able to connect to the 
# VM via 'virsh console'.

Rescue:/> vim /etc/fstab # comment out:
#/dev/sdb1            /lhome1 ...
#ramfs                /lhome1/mcnys6dev/hudson_home ...

# Change default run level from 5 to 3
Rescue:/> vim /etc/inittab
id:3:initdefault:

# NB! Disable persistent network rule in udev or else networking will not work.
#     See: http://www.novell.com/support/documentLink.do?externalID=3048119
# Insert the following line to /etc/rc.d/boot.udev, /etc/rc.d/boot.udev_retry 
# into start procedure:
echo -n > /etc/udev/rules.d/70-persistent-net.rules

4. DHCPD as dhcp client
# Prevent the client deamon from setting hostname as we want to get it 
# from DHCP server. 

# In /etc/sysconfig/network/dhcp, the following two variables should have 
# the values below 
DHCLIENT_SET_HOSTNAME="yes"
DHCLIENT_HOSTNAME_OPTION=""

5. StratusLab contextualization.

Rescue:/> cat > /etc/rc.d/onecontext < EOF
#! /bin/sh
#
### BEGIN INIT INFO
# Provides:       onecontext
# Required-Start: $local_fs
# Required-Stop:  $local_fs
# Default-Start:  3
# Default-Stop:   0 1 2 6
# Short-Description: StratusLab context
# Description:   StratusLab context
### END INIT INFO

. /etc/rc.status

[ -e /dev/hdd ] && DEVICE=hdd || DEVICE=sr0

DEVICE=/dev/$DEVICE
CONTEXT_DIR=/mnt/stratuslab

rc_reset
case "$1" in
    start)
      mkdir -p $CONTEXT_DIR
      
      mount -t iso9660 $DEVICE $CONTEXT_DIR
      
      if [ -f $CONTEXT_DIR/context.sh ]; then
        $CONTEXT_DIR/init.sh
      fi
      rc_status -v
      ;;
    stop)
      umount $DEVICE
      rc_status -v
      ;;
    status)
      ls $CONTEXT_DIR
      rc_status -v
      ;;
    *)
      echo "Usage: $0 {start|stop|status}"
      exit 1
      ;;
esac
rc_exit
EOF
Rescue:/> chmod 755 /etc/rc.d/onecontext 
Rescue:/> cd /etc/rc.d/rc3.d
# Run it when SSH is started
Rescue:/> ln -sf ../onecontext S08onecontext

Rescue:/> exit

Rescue:~ # rm -f /mnt/dev/sda2
Rescue:~ # umount /mnt/
Rescue:~ # e2fsck  /dev/sda2

# Stop the VM
Rescue:~ # shutdown -h now

6. Configure networking. After re-booting with deployment script B.

Connect with VNC and manually configure networking with YaST. Remove exiting 
eth0 device. Configure RTL-8139: change device name from eth1 to eth0. After 
saving the configuration DCHP request will be done (updates /etc/resolve.conf 
as well). 

7. Configure sshd. In /etc/ssh/sshd_config
PasswordAuthentication no
PermitRootLogin without-password

service sshd restart

====================================
Deployment scripts.

*** A. "Rescue Mode" deployment script:

[root@sixsq-2 SLES]# virsh dumpxml SLES_11_test
<domain type='kvm'>
  <name>SLES_11_test</name>
  <uuid>66685b36-6977-44f9-b34e-f850c65c2cf7</uuid>
  <memory>2097152</memory>
  <currentMemory>2097152</currentMemory>
  <vcpu>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc-0.13'>hvm</type>
    <boot dev='cdrom'/>
    <bootmenu enable='no'/>
  </os>
  <features>
    <acpi/>
    <apic/>
    <pae/>
  </features>
  <clock offset='utc'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw'/>
      <source file='/root/SLES/SLES-11_test.img'/>
      <target dev='vda' bus='scsi'/>
      <address type='drive' controller='0' bus='0' unit='0'/>
    </disk>
    <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='/root/SLES/SLES-11-SP1-DVD-x86_64-GM-DVD1.iso'/>
      <target dev='hdc' bus='ide'/>
      <readonly/>
      <address type='drive' controller='0' bus='1' unit='0'/>
    </disk>
    <controller type='ide' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x1'/>
    </controller>
    <controller type='scsi' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/>
    </controller>
    <interface type='bridge'>
      <mac address='52:54:00:11:d8:4c'/>
      <source bridge='br0'/>
      <target dev='vnet3'/>
      <model type='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>
    <serial type='pty'>
      <target port='0'/>
    </serial>
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
    <input type='mouse' bus='ps2'/>
    <graphics type='vnc' port='-1' autoport='yes'/>
    <sound model='ac97'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/>
    </sound>
    <video>
      <model type='cirrus' vram='9216' heads='1'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>
    </video>
    <memballoon model='virtio'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/>
    </memballoon>
  </devices>
</domain>

[root@sixsq-2 SLES]# 


*** B. Final VM deployment with StratusLab contextualization.

[root@sixsq-2 SLES]# cat deployment.0 
<domain type='kvm'>
	<name>SLES_11</name>
	<vcpu>2</vcpu>
	<memory>2097152</memory>
	<os>
		<type arch='x86_64'>hvm</type>
		<boot dev='hd'/>
	</os>
	<devices>
		<emulator>/usr/libexec/qemu-kvm</emulator>
		<disk type='file' device='disk'>
			<source file='/root/SLES/SLES-11_test.img'/>
			<target dev='sda' bus='scsi'/>
			<driver name='qemu' type='raw'/>
		</disk>
		<disk type='file' device='cdrom'>
			<source file='/root/SLES/disk.2'/>
			<target dev='sdd'/>
			<readonly/>
			<driver name='qemu'/>
		</disk>
		<interface type='bridge'>
			<source bridge='br0'/>
			<mac address='00:16:3e:d9:78:bd'/>
		</interface>
                <console type='pty'>
                  <target type='serial' port='0'/>
                </console>
                <graphics type='vnc' port='5904' keymap='en-us'/>
                <serial type='pty'>
                        <target port='0'/>
                </serial>
                <video>
                        <model type='vga' vram='18432' heads='1'/>
                </video>
	</devices>
	<features>
		<acpi/>
	</features>
</domain>
[root@sixsq-2 SLES]# 

