#### Contents of the preconfiguration file

### Localization
d-i debian-installer/locale string en_US
# Keyboard selection.
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/wireless_wep string

### Mirror settings
# Ubuntu archive mirror country:
#d-i mirror/http/countries select France
#d-i mirror/http/countries select FR
# country code or "manual" (for internal use)
d-i mirror/country string FR
#d-i mirror/country string manual
# Ubuntu archive mirror hostname:
#d-i mirror/http/hostname string fr.archive.ubuntu.com
# Ubuntu archive mirror:
#d-i mirror/http/mirror select fr.archive.ubuntu.com
#d-i mirror/http/mirror select mirror.archive.ubuntu.com

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Europe/Paris
# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean false

d-i partman-auto/disk string /dev/vda
d-i partman-auto/method string regular
#d-i partman-auto/choose_recipe select home
#d-i partman-auto/choose_recipe select atomic
#d-i partman/default_filesystem string ext4
d-i partman-auto/choose_recipe select atomic-no-swap

d-i partman-auto/expert_recipe string                        \
      atomic-no-swap ::                                      \
             1000 50 1000000000 ext4                         \
                     $primary{ } $bootable{ }                \
                     method{ format } format{ }              \
                     use_filesystem{ } filesystem{ ext4 }    \
                     mountpoint{ / }                         \
             .

# Do you want to return to the partitioning menu?
partman-basicfilesystems partman-basicfilesystems/no_swap boolean false
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
d-i partman/mount_style select traditional

### Account setup
d-i passwd/root-login boolean true
d-i passwd/make-user boolean false
#d-i passwd/root-password password %ROOTPW%
#d-i passwd/root-password-again password %ROOTPW%
d-i passwd/root-password-crypted password $1$lFa4QIio$Wb8v1xsKePKngDT6CDqeF0
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false

### Package selection
tasksel tasksel/first multiselect Standard system, Basic Ubuntu server
#tasksel tasksel/first multiselect Standard system
#tasksel tasksel/first multiselect standard
base-installer base-installer/install-recommends boolean true
#d-i pkgsel/include/install-recommends boolean true
# Individual additional packages to install
d-i pkgsel/include string curl acpid unzip zip openssh-server cloud-init libnss-myhostname
# systemd-hostnamed: Warning: ... Changing the local hostname might make it unresolveable. Please install nss-myhostname!

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade
# Policy for applying updates. May be "none" (no automatic updates),
# "unattended-upgrades" (install security updates automatically), or
# "landscape" (manage system with Landscape).
d-i pkgsel/update-policy select none

### Boot loader installation
# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true
# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

### Apt setup
d-i apt-setup/security_host string
base-config apt-setup/security-updates boolean false
# Use a network mirror?
apt-mirror-setup apt-setup/use_mirror boolean true

ubiquity ubiquity/summary note
ubiquity ubiquity/reboot boolean true

### Finishing up the installation
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# In Debian/Ubuntu, ssh keys are generated at package install time.  Because
# the disk image may be cached, we need to remove the ssh keys, but this means
# that ssh'ing into the server won't work later.  So we remove the keys, but
# setup a service that will generate the keys on boot if necessary.
d-i preseed/late_command string \
    in-target rm -f /etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_dsa_key.pub /etc/ssh/ssh_host_ecdsa_key /etc/ssh/ssh_host_ecdsa_key.pub /etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_rsa_key.pub /etc/ssh/ssh_host_ed25519_key /etc/ssh/ssh_host_ed25519_key.pub ; \
    echo '#! /bin/sh' > /target/etc/init.d/oz-generate-ssh ; \
    echo '#' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# Debian/Ubuntu generate ssh host keys at package installation time.' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# This is problematic for Oz, since the final disk image may be cached' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# and reused, leading to duplicate host keys.  To work around this, Oz' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# deletes the SSH host keys at the end of installation.  This solves' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# the above problem, but introduces the problem of having no way to' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# SSH into the machine without manual intervention.  This service checks' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# to see if host keys are already installed, and if not, recreates them.' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '# Note that after the very first boot, this service could be removed.' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '#' >> /target/etc/init.d/oz-generate-ssh ; \
    echo 'case "$1" in' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '  start)' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '      [ -r /etc/ssh/ssh_host_rsa_key ] || /usr/sbin/dpkg-reconfigure openssh-server' >> /target/etc/init.d/oz-generate-ssh ; \
    echo '      ;;' >> /target/etc/init.d/oz-generate-ssh ; \
    echo 'esac' >> /target/etc/init.d/oz-generate-ssh ; \
    echo 'exit 0' >> /target/etc/init.d/oz-generate-ssh ; \
    in-target chmod 755 /etc/init.d/oz-generate-ssh ; \
    in-target ln -s /etc/init.d/oz-generate-ssh /etc/rc2.d/S40oz-generate-ssh ; \
                                sed -i '/127.0.1.1/d' /target/etc/hosts ; \
                                sed -i '/^[[:blank:]]*\(PasswordAuthentication\|GSSAPIAuthentication\|ChallengeResponseAuthentication\|PermitRootLogin\)/d' /target/etc/ssh/sshd_config ; \
                                echo '# StratusLab SSH daemon modifications' >>/target/etc/ssh/sshd_config ; \
                                echo 'PasswordAuthentication no' >>/target/etc/ssh/sshd_config ; \
                                echo 'GSSAPIAuthentication no' >>/target/etc/ssh/sshd_config ; \
                                echo 'ChallengeResponseAuthentication no' >>/target/etc/ssh/sshd_config ; \
                                echo 'PermitRootLogin without-password' >>/target/etc/ssh/sshd_config ; \
                                in-target wget http://yum.stratuslab.eu/snapshots/centos-6.2/stratuslab-one-context_2.5-1.20130129_all.deb ; \
                                in-target dpkg -i stratuslab-one-context_2.5-1.20130129_all.deb ; \
                                sed -i 's#!/bin/sh$#!/bin/bash#' /target/usr/bin/stratuslab-one-context ; \
                                sed -i 's/context_device.*$/context_device=sr0/' /target/etc/stratuslab/stratuslab-one-context.cfg ; \
                                echo "start on (local-filesystems and net-device-up IFACE=eth0)" > /target/etc/init/stratuslab-one-context.conf ; \
                                echo "stop on runlevel [!12345]" >> /target/etc/init/stratuslab-one-context.conf ; \
                                echo "task" >> /target/etc/init/stratuslab-one-context.conf ; \
                                echo "console output" >> /target/etc/init/stratuslab-one-context.conf ; \
                                echo "exec /usr/bin/stratuslab-one-context" >> /target/etc/init/stratuslab-one-context.conf ; \
                                sed -i '/exit[[:blank:]]\{1,\}0/d' /target/etc/rc.local ; \
                                echo "modprobe acpiphp" >> /target/etc/rc.local ; \
                                echo "exit 0" >> /target/etc/rc.local ; \
                                echo "acpiphp" >> /target/etc/modules ; \
                                echo 'case $reason in' >/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '  BOUND|RENEW|REBIND|REBOOT)' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    [ "$new_ip_address" != "$old_ip_address" ] || return' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    hn="$(host $new_ip_address)" || return' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    hn=$(echo "$hn" | awk '"'"'{split($NF,fqdn,"."); print fqdn[1]}'"'"') || return' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    [ "$hn" != "$(hostname)" ] && hostname "$hn"' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    [ -f /etc/hostname ] && [ "$hn" != "$(cat /etc/hostname)" ] && echo "$hn" >/etc/hostname' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo '    ;;' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                echo 'esac' >>/target/etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                in-target chmod 755 /etc/dhcp/dhclient-exit-hooks.d/hostname ; \
                                sed -i "s/#timeout 60/timeout 5/"  /target/etc/dhcp/dhclient.conf ; \
                                sed -i "s/#retry 60/retry 2/"  /target/etc/dhcp/dhclient.conf; \
                                sed -i '/users:/,/- default/ s/- default/- root/' /target/etc/cloud/cloud.cfg; \
                                sed -i 's/disable_root: \(true\|1\)/disable_root: false/' /target/etc/cloud/cloud.cfg

# ; \
#                                 echo 'apt_preserve_sources_list: true' >>/target/etc/cloud/cloud.cfg
                                # sed -i '/users:/,+1 s/default/root/' /target/etc/cloud/cloud.cfg; \
