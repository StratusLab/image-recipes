# System authorization information
auth --enableshadow --passalgo=sha512

# Reboot after installation
reboot

# Use network installation
url --url "http://mirror.centos.org/centos/$releasever/os/$basearch/"
#url --url "http://mirror.centos.org/centos/7/os/x86_64/"

# Additional repositories
# Install epel-release package from
repo --name="extras"
# Install stratuslab-contextualization package from
repo --name="StratusLab" --baseurl=http://yum.stratuslab.eu/releases/centos-6/ --cost=5000

text
skipx

# Firewall configuration
firewall --enabled --service=ssh
firstboot --disable
ignoredisk --only-use=vda
#firewall --disabled

# Network information
network  --bootproto=dhcp --device=eth0 --activate --onboot=on

# Keyboard layouts
# old format: keyboard us
# new format:
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Root password
#rootpw --iscrypted nope
rootpw  --iscrypted $6$ski7L2pLPtnx3Jov$Yw9pvZIP55BLKX.2qCFPjjlcMQwAvZCt/Lv5fV4TqBnzDfJa1ENnGwL12uh8d5UTRAp1KllfyhySHInX3UPG60

# SELinux configuration
selinux --enforcing
#selinux --disabled

# System services
services --disabled="kdump,rhsmcertd" --enabled="network,sshd,rsyslog,ovirt-guest-agent,chronyd"

# Agree to EULA
eula --agreed

# System timezone
timezone Europe/Paris

# System bootloader configuration
#bootloader --timeout=1 --append="no_timer_check console=tty1 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0" --boot-drive=vda
#bootloader --append="no_timer_check console=tty0 console=ttyS0,115200 net.ifnames=0 biosdevname=0" --timeout=1 --boot-drive=vda
bootloader --append="no_timer_check net.ifnames=0 biosdevname=0" --timeout=1 --boot-drive=vda

# Clear the Master Boot Record
zerombr

# Partition clearing information
clearpart --all --initlabel

# Disk partitioning information
#part / --fstype="xfs" --ondisk=vda --size=6144
part / --fstype="ext4" --ondisk=vda --size=5000 --grow
#part /     --fstype=ext4 --size=1   --grow --ondisk=sda --asprimary

%post --erroronfail

# Update the machine
/usr/bin/yum update -y --skip-broken || :
/usr/bin/yum install -y cloud-init cloud-utils-growpart || :

# workaround anaconda requirements
#passwd -d root
#passwd -l root

sed -i '/^[[:blank:]]*\(PasswordAuthentication\|GSSAPIAuthentication\|ChallengeResponseAuthentication\|PermitRootLogin\)/d' /etc/ssh/sshd_config
cat >>/etc/ssh/sshd_config <<EOF
# StratusLab SSH daemon modifications
PasswordAuthentication no
GSSAPIAuthentication no
ChallengeResponseAuthentication no
PermitRootLogin without-password
EOF

## Create grub.conf for EC2. This used to be done by appliance creator but
## anaconda doesn't do it. And, in case appliance-creator is used, we're
## overriding it here so that both cases get the exact same file.
## Note that the console line is different -- that's because EC2 provides
## different virtual hardware, and this is a convenient way to act differently
#echo -n "Creating grub.conf for pvgrub"
#rootuuid=$( awk '$2=="/" { print $1 };'  /etc/fstab )
#mkdir -p /boot/grub
#echo -e 'default=0\ntimeout=0\n\n' > /boot/grub/grub.conf
#for kv in $( ls -1v /boot/vmlinuz* |grep -v rescue |sed s/.*vmlinuz-//  ); do
#  echo "title CERN Centos Linux 7 ($kv)" >> /boot/grub/grub.conf
#  echo -e "\troot (hd0)" >> /boot/grub/grub.conf
#  echo -e "\tkernel /boot/vmlinuz-$kv ro root=$rootuuid console=hvc0 LANG=en_US.UTF-8" >> /boot/grub/grub.conf
#  echo -e "\tinitrd /boot/initramfs-$kv.img" >> /boot/grub/grub.conf
#  echo
#done

##link grub.conf to menu.lst for ec2 to work
#echo -n "Linking menu.lst to old-style grub.conf for pv-grub"
#ln -sf grub.conf /boot/grub/menu.lst
#ln -sf /boot/grub/grub.conf /etc/grub.conf
#echo .

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Remove firewalld; it is required to be present for install/image building.
echo "Removing firewalld."
yum -C -y remove firewalld --setopt="clean_requirements_on_remove=1"

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf
echo .

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules
ln -s /dev/null /etc/udev/rules.d/60-net.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
PERSISTENT_DHCLIENT="1"
EOF

# set virtual-guest as default profile for tuned
echo "virtual-guest" > /etc/tuned/active_profile

# generic localhost names
#cat > /etc/hosts << EOF
#127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
#
#EOF
echo .

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
systemctl mask tmp.mount

cat <<EOL > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOL

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

# Fixes for EPEL cloud-init.

# # Ugly hack: detect CentOS as a systemd target.
# if [ -e /usr/lib/python2.7/site-packages/cloudinit/distros/rhel.py ]; then
#     /bin/sed -i 's|Red Hat Enterprise Linux|CentOS Linux|' /usr/lib/python2.7/site-packages/cloudinit/distros/rhel.py 	
# fi

if [ -e /etc/cloud/cloud.cfg ]; then
    # /bin/sed -i 's|name: fedora|name: cloud-user|' /etc/cloud/cloud.cfg
    # /bin/sed -i 's|distro: fedora|distro: rhel|' /etc/cloud/cloud.cfg
    # /bin/sed -i 's|Fedora|Centos|' /etc/cloud/cloud.cfg
    /bin/sed -i 's|^disable_root: 1|disable_root: 0|' /etc/cloud/cloud.cfg
fi

## workaround https://bugzilla.redhat.com/show_bug.cgi?id=966888
#if ! grep -q growpart /etc/cloud/cloud.cfg; then
#  sed -i 's/ - resizefs/ - growpart\n - resizefs/' /etc/cloud/cloud.cfg
#fi

## FIXME (not needed with cloud-init from epel7) allow sudo powers to cloud-user
#echo -e 'cloud-user\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers

# # Disable subscription-manager yum plugins
# for f in product-id.conf subscription-manager.conf; do
# [ -e /etc/yum/pluginconf.d/"$f" ] && sed -i 's|^enabled=1|enabled=0|' /etc/yum/pluginconf.d/"$f"
# done

#
# Make logrotate quiescent (https://bugzilla.redhat.com/show_bug.cgi?id=1144465)
#
/bin/sed -i 's|sharedscripts|sharedscripts\n    missingok|' /etc/logrotate.d/syslog

echo "Cleaning old yum repodata."
yum clean all

# clean up installation logs
#rm -rf /var/log/yum.log
#rm -rf /var/lib/yum/*
#rm -rf /root/install.log
#rm -rf /root/install.log.syslog
#rm -rf /root/anaconda-ks.cfg
#rm -rf /var/log/anaconda*

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
/usr/sbin/fixfiles -R -a restore

# # Fix for rhel-autorelabel.service
# # (see https://bugzilla.redhat.com/show_bug.cgi?id=1049656)
# _file=rhel-autorelabel.service
# _local=/etc/systemd/system/$_file
# _installed=/usr/lib/systemd/system/$_file
# if [ -f $_installed ] &&
#    grep -q '^[[:blank:]]*StandardInput=tty' $_installed &&
#    ! grep -q '^[[:blank:]]*TTYPath=' $_installed; then
#    printf "Overriding $_installed with $_local"
#    sed '/^[[:blank:]]*StandardInput=tty/a\
# TTYPath=/dev/tty0' $_installed >| $_local
#    printf ".\n"
# fi
# unset _file _local _installed

%end

%packages
@core
chrony
# May be installed from EPEL repo
#cloud-init
#cloud-utils-growpart
dracut-config-generic
dracut-norescue
firewalld
grub2
kernel
nfs-utils
rsync
tar
yum-utils
-NetworkManager
-NetworkManager-tui
-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-iprutils
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-plymouth
%end

%packages
# mandatory packages of core group
#openssh
#openssh-clients
#openssh-server
acpid
# default packages of base group
wget
unzip
zip
stratuslab-contextualization
epel-release
%end
